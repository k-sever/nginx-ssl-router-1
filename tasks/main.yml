---
# tasks file for nginx-ssl-router

- name: add nginx/stable repo
  apt_repository:
    repo: 'ppa:nginx/stable'

- name: update apt cache
  apt: update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: apt install nginx
  apt: name=nginx state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Gather facts
  action: ec2_facts

- name: lookup certificates
  s3: bucket="{{ ssl_router_s3_bucket }}" prefix="{{ ssl_router_s3_path }}" mode=list region={{ansible_ec2_placement_region}}
  register: ssl_domains

- debug: msg="{{ item }}"
  with_items: "{{ ssl_domains.s3_keys }}"

- name: ensure {{ ssl_router_nginx_config_dir }} exists
  file: path={{ ssl_router_nginx_config_dir }} state=directory

- name: ensure {{ ssl_router_nginx_enabled_dir }} exists
  file: path={{ ssl_router_nginx_enabled_dir }} state=directory

# s3 module failing, using shell command
- name: copy ssl certificates
  shell: aws s3 cp s3://{{ ssl_router_s3_bucket }}/{{ item }} {{ ssl_router_nginx_config_dir }}{{ item | basename }}.cert
  with_items: "{{ ssl_domains.s3_keys }}"

- name: set permissions
  file: path="{{ ssl_router_nginx_config_dir }}{{ item | basename }}.cert" mode=0400
  with_items: "{{ ssl_domains.s3_keys }}"

- name: add nginx.conf
  template: src=templates/nginx.conf.j2 dest=/etc/nginx/nginx.conf mode=0644

- name: add catch all
  template: src=templates/verygoodproxy.conf.j2 dest={{ ssl_router_nginx_config_dir }}verygoodproxy.conf mode=0400

- name: add catch all certificate
  shell: aws s3 cp s3://{{ ssl_router_s3_bucket }}/ssl.verygoodproxy.cert {{ ssl_router_nginx_config_dir }}verygoodproxy.cert

- name: activate catch all
  file: src={{ ssl_router_nginx_config_dir }}verygoodproxy.conf dest={{ ssl_router_nginx_enabled_dir }}verygoodproxy.conf state=link

- name: add tenant configs
  template: src=templates/vault_tenant.conf.j2 dest={{ ssl_router_nginx_config_dir }}{{ item | basename }}.config mode=0400
  with_items: "{{ ssl_domains.s3_keys }}"
  when: item.startswith('ssl/2/') | bool

- name: symlink to available
  file: src={{ ssl_router_nginx_config_dir }}{{ item | basename }}.config dest={{ ssl_router_nginx_enabled_dir }}{{ item | basename }}.config state=link
  with_items: "{{ ssl_domains.s3_keys }}"

- name: delete nginx default config
  file: path=/etc/nginx/conf.d/default.conf state=absent

- name: delete default sites-enabled/default config
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: reload nginx config
  service: name=nginx state=reloaded
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
