# Default HTTPS Redirect
server {
    listen              443 ssl proxy_protocol default_server;
    server_name         _;
    ssl_certificate     {{ ssl_router_nginx_config_dir }}{{ ssl_router_data_env }}.{{ ssl_router_tld }};
    ssl_certificate_key {{ ssl_router_nginx_config_dir }}{{ ssl_router_data_env }}.{{ ssl_router_tld }};
    ssl_protocols       TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    set_real_ip_from {{ ansible_default_ipv4.network | ipsubnet(16,0) }};
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    proxy_next_upstream off;

    return 301 https://www.verygoodsecurity.com/;
}
# END Default HTTPS Redirect

# Per-tenant proxy_pass overrides
{% for tnt, override_upstream in ssl_router_upstream_overrides_tnt.items() %}
# Tenant: {{ tnt }}
server {
    listen              443 ssl proxy_protocol;
    server_name         ~^{{ tnt }}\.(?<data_environment>(live|sandbox))\.verygoodproxy\.(?<tld>(io|com))$;
    ssl_certificate     {{ ssl_router_nginx_config_dir }}{{ ssl_router_data_env }}.{{ ssl_router_tld }};
    ssl_certificate_key {{ ssl_router_nginx_config_dir }}{{ ssl_router_data_env }}.{{ ssl_router_tld }};
    ssl_protocols       TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    set_real_ip_from {{ ansible_default_ipv4.network | ipsubnet(16,0) }};
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    proxy_next_upstream off;

    location / {
      proxy_set_header        Host {{ tnt }}.$data_environment.verygoodproxy.$tld;
      proxy_set_header        Via terminator;
      proxy_set_header        X-Forwarded-Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        VGS-Tenant {{ tnt }};
      resolver                {{ ansible_dns.nameservers | join (',') }};
      set                     $vault                                          https://{{ override_upstream }};
      proxy_pass              $vault;
      proxy_read_timeout      90;
    }

    set $tenant_endpoint {{ tnt }}.$data_environment.verygoodproxy.$tld;
    access_log /var/log/nginx/access.log json_combined;
}
# END Tenant: {{ tnt }}
{% endfor %}
# END Per-tenant proxy_pass overrides


# General tenants proxy-pass
server {
    listen              443 ssl proxy_protocol;
    server_name         {{ ssl_router_general_proxy_pass.server_name }}
    ssl_certificate     {{ ssl_router_nginx_config_dir }}{{ ssl_router_data_env }}.{{ ssl_router_tld }};
    ssl_certificate_key {{ ssl_router_nginx_config_dir }}{{ ssl_router_data_env }}.{{ ssl_router_tld }};
    ssl_protocols       TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    set_real_ip_from {{ ansible_default_ipv4.network | ipsubnet(16,0) }};
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    proxy_next_upstream off;

    location / {
      proxy_set_header        {{ ssl_router_general_proxy_pass.proxy_set_header }}
      proxy_set_header        Via terminator;
      proxy_set_header        X-Forwarded-Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        VGS-Tenant $tenant;
      resolver                {{ ansible_dns.nameservers | join (',') }};
      set                     $vault                                          {{ ssl_router_general_proxy_pass.proxy_pass_url }}
      proxy_pass              $vault;
      proxy_read_timeout      90;
    }

    set $tenant_endpoint {{ ssl_router_general_proxy_pass.tenant_endpoint }}
    access_log /var/log/nginx/access.log json_combined;
}
# END General tenants proxy-pass


# Default HTTP Redirect & acme-challenge
server {
    listen              80 default_server proxy_protocol;
    server_name         _;

    set_real_ip_from {{ ansible_default_ipv4.network | ipsubnet(16,0) }};
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    proxy_next_upstream off;

    rewrite ^/$ {{ cert_mgr_url }}/docs/http.html redirect;

    location /.well-known/acme-challenge/ {
      resolver                {{ ansible_dns.nameservers | join (',') }};
      set $cert_manager       {{ cert_mgr_url }};
      proxy_pass              $cert_manager;
      proxy_read_timeout      90;
    }

    access_log /var/log/nginx/access.log json_combined;
}
# END Default HTTP Redirect & acme-challenge