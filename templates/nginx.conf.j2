user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    log_format json_combined escape=json '{ '
      '"time": "$time_local", '
      '"remote_addr": "$proxy_protocol_addr", '
      '"remote_user": "$remote_user", '
      '"tenant": "$tenant", '
      '"data_environment": "$data_environment", '
      '"tenant_endpoint": "$tenant_endpoint", '
      '"request": "$request", '
      '"status": $status, '
      '"body_bytes_sent": $body_bytes_sent, '
      '"request_time": $request_time, '
      '"http_referrer": "$http_referer", '
      '"http_user_agent": "$http_user_agent", '
      '"ssl_protocol": "$ssl_protocol", '
      '"ssl_cipher": "$ssl_cipher" '
      ' }';

    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Override maximum file size accepted
    client_max_body_size 100m;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}

stream {
    upstream live_forward_sftp_proxies {
      zone forward_proxies 64k;
      server forward.live.{{ ssl_router_tld }}:8022;
      server forward.live.{{ ssl_router_tld }}:8022 backup;
    }
    upstream live_forward_http_proxies {
      zone forward_proxies 64k;
      server forward.live.{{ ssl_router_tld }}:8080;
      server forward.live.{{ ssl_router_tld }}:8080 backup;
    }
    upstream sandbox_forward_sftp_proxies {
      zone forward_proxies 64k;
      server forward.sandbox.{{ ssl_router_tld }}:8022;
      server forward.sandbox.{{ ssl_router_tld }}:8022 backup;
    }
    upstream sandbox_forward_http_proxies {
      zone forward_proxies 64k;
      server forward.sandbox.{{ ssl_router_tld }}:8080;
      server forward.sandbox.{{ ssl_router_tld }}:8080 backup;
    }
    
    resolver {{ dns_resolver }};
    
    server {
      #set $data_environment live;  # Doesn't work :(
      #set $transport http;
      listen     8080;
      proxy_pass live_forward_http_proxies;
      so_keepalive off;
    }
    server {
      #set $data_environment live;  # Doesn't work :(
      #set $transport sftp;
      listen     8082;
      proxy_pass live_forward_sftp_proxies;
      so_keepalive off;
    }
    
    server {
      #set $data_environment sandbox;
      #set $transport http;
      listen     8081;
      proxy_pass sandbox_forward_http_proxies;
      so_keepalive off;
    }
    server {
      #set $data_environment sandbox;
      #set $transport sftp;
      listen     8083;
      proxy_pass sandbox_forward_sftp_proxies;
      so_keepalive off;
    }

    ##
    # Logging Settings
    ##

    log_format stream_json_combined escape=json '{ '
      '"time": "$time_local", '
      '"remote_addr": "$proxy_protocol_addr", '
      '"protocol": "$protocol", '
      '"status": $status, '
      '"bytes_sent": $bytes_sent, '
      '"bytes_received": $bytes_received, '
      '"session_time": $session_time, '
      '"upstream_addr": "$upstream_addr" '
      ' }';

    access_log /var/log/nginx/stream-access.log stream_json_combined;
    error_log /var/log/nginx/stream-error.log;
}
