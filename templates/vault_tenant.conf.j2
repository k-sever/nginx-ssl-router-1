# {{ ansible_managed }}
# This template represents a termination point for a SSL certificate

{% set url_parts = item.split('/') %}

{% set passthrough_host_name = url_parts[2] == 'pt' %}
{% set upstream_name = url_parts[3] %}
{% set data_environment = url_parts[4] %}
{% set tenant = url_parts[5] %}
{% set custom_host_name = url_parts[6] %}

server {

    listen              443 ssl proxy_protocol;
    server_name         {{ custom_host_name }};
    ssl_certificate     {{ ssl_router_nginx_config_dir }}{{ custom_host_name }}.cert;
    ssl_certificate_key {{ ssl_router_nginx_config_dir }}{{ custom_host_name }}.cert;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    set_real_ip_from 0.0.0.0/0;
    real_ip_header proxy_protocol;
    real_ip_recursive on;

    location / {
      proxy_set_header        Host {% if passthrough_host_name %}$host{% else %}{{ upstream_name }}{% endif %};
      proxy_set_header        Via terminator;
      proxy_set_header        X-Forwarded-Host $host;
      proxy_set_header        X-Real-IP $proxy_protocol_addr;
      proxy_set_header        X-Forwarded-For $proxy_protocol_addr;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_set_header        VGS-Tenant {{ tenant }};
      resolver                {{ dns_resolver }};

      set                     $vault    https://{{ upstream_name }};
      proxy_pass              $vault;
      proxy_read_timeout      90;
    }

    set $tenant {{ tenant }};
    set $data_environment {{ data_environment }};
    set $tenant_endpoint $http_host;
    access_log /var/log/nginx/access.log json_combined;

}
